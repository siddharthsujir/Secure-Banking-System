<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">
	
	<http auto-config="true" use-expressions="true">
	  <intercept-url pattern="/*" requires-channel="https"/>
	  <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/employee/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/manager/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/merchant/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/creditfunds/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/debitfunds/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/merchanttransferfund/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/transfer/**" access="hasRole('ROLE_USER')" />
	  <intercept-url pattern="/ViewRequests/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/extReqReject/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/extReqConfirm/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/ModifyDetails/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/ModifyDetailsUser/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/viewStatement/**" access="hasAnyRole('ROLE_USER','ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/statement/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/pendingtransactions/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/approvetransactions/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/RequestFromEmp/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/customerAccept/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/NewCustomerOption/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  <intercept-url pattern="/authorizerequestview/**" access="hasRole('ROLE_USER')" requires-channel="https"/>
	  
	  <intercept-url pattern="/authorizerequestview/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/merchanttransferpayment/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  <intercept-url pattern="/paymentverify/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  
	  <intercept-url pattern="/OneUpdateInter/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/UpdateRegUser/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/DeleteRegUser/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/NewDelRegUser/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/NewTimeOutEmployee/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/NewRegUser/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/CreateRegUser/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  <intercept-url pattern="/viewsystemlog/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>
	  
	  <intercept-url pattern="/initialTransac/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/RequestAcceptedByUser/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/empreqcust/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/RequestForAuth/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/viewTransactionsofUser/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/ModifyTransactionsofUser/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/modiTransactions/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/TransacAmountModify/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/DeleteTransactionsofUser/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/deleteTransaction/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  <intercept-url pattern="/modiTransactions/**" access="hasRole('ROLE_EMPLOYEE')" requires-channel="https"/>
	  
	  <intercept-url pattern="/createindividualuser/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/newindividualuser/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/deleteexternaluser/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/ModifyDetailsUser2/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/modifycustomer/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/removeexternaluser/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/requestauthorization/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/updatecustomer/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/submitauthrequest/**" access="hasRole('ROLE_MANAGER')" />
	  <intercept-url pattern="/viewauthorizedtransactions/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/viewcustomertransact/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  
	  <intercept-url pattern="/authorizecriticaltransactions/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/submittransactionapproval/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/authorizemodifyrequest/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/authorizemodification/**" access="hasRole('ROLE_MANAGER')" requires-channel="https"/>
	  <intercept-url pattern="/RequestFromEmp/**" access="hasRole('ROLE_MERCHANT')" requires-channel="https"/>
	  

	  
	  
	  <access-denied-handler error-page="/403" />
	  <form-login 
		login-page="/login" 
		login-processing-url="/j_spring_security_check"
		authentication-success-handler-ref="loginSuccessHandler"
		authentication-failure-handler-ref="loginFailureHandler"
		authentication-failure-url="/login?error" 
		username-parameter="username"
		password-parameter="password" />
	  <logout logout-url="/j_spring_security_logout" logout-success-url="/login?logout" />
	  <!-- enable csrf protection -->
	  <csrf/>
	  <session-management session-fixation-protection="newSession">
	  	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/403"/>
	  </session-management>
	</http>
	
	<authentication-manager>
		<authentication-provider>
		 <password-encoder hash="sha-256"></password-encoder>
			<jdbc-user-service 
			users-by-username-query="select username,password, enabled from users where username=?"
			authorities-by-username-query="select username, role from roles where username =?"  
			data-source-ref="dataSource"/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>